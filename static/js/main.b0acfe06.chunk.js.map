{"version":3,"sources":["components/Divisible.js","App.js","serviceWorker.js","index.js"],"names":["Divisible","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rangers","divisorInfo","error","getRangers","bind","assertThisInitialized","getDivisorInfo","inherits","createClass","key","value","_this2","console","log","setState","rangeError","axios","get","then","res","data","catch","err","_this3","divisorError","divisors","result","_this4","react_default","a","createElement","className","lower","upper","outputDetails","map","item","index","divisor","output","resultRows","_loop","i","push","Component","App","BrowserRouter","style","width","display","margin","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0acfe06.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport class Divisible extends Component {\n  constructor() {\n    super();\n    this.state = {\n      rangers: '',\n      divisorInfo: '',\n      error: {}\n    };\n    this.getRangers = this.getRangers.bind(this);\n    this.getDivisorInfo = this.getDivisorInfo.bind(this);\n  }\n\n  componentDidMount() {\n    this.getRangers();\n    this.getDivisorInfo();\n  }\n  getRangers() {\n    console.log('getRangers');\n    this.setState({ error: { rangeError: '' } });\n    axios\n      .get(`https://join.reckon.com/test1/rangeInfo`)\n      .then(res => {\n        //set vlaue\n        console.log('res', res);\n        this.setState({ rangers: res.data });\n      })\n      .catch(err => {\n        //handle error\n        console.log('error', err);\n        this.setState({ error: { rangeError: 'Error in getting Ranges' } });\n      });\n  }\n\n  getDivisorInfo() {\n    this.setState({ error: { divisorError: '' } });\n    console.log('getDivisorInfo');\n    axios\n      .get(`https://join.reckon.com/test1/divisorInfo`)\n      .then(res => {\n        //set vlaue\n        console.log('res', res);\n        this.setState({ divisorInfo: res.data });\n      })\n      .catch(err => {\n        //handle error\n        console.log('error', err);\n        this.setState({\n          error: { divisorError: 'Error in getting Divisor Details' }\n        });\n      });\n  }\n\n  render() {\n    let rangers, divisors, result;\n\n    //set Range details\n    if (this.state.rangers !== '') {\n      rangers = (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                {' '}\n                <h4>Rangers</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                Lower Range : {this.state.rangers.lower}\n              </div>\n              <div className=\"col-md-6\">\n                Upper Range : {this.state.rangers.upper}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      rangers = (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4>Rangers</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12 text-danger\">\n                {this.state.error.rangeError}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //set divisor details\n    if (this.state.divisorInfo !== '') {\n      divisors = (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4>Divisors</h4>\n              </div>\n            </div>\n\n            {this.state.divisorInfo.outputDetails.map((item, index) => {\n              return (\n                <div key={index} className=\"row\">\n                  <div className=\"col-md-12\">\n                    {item.divisor} {item.output}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      );\n    } else {\n      divisors = (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                {' '}\n                <h4>Divisors</h4>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"col-md-12 text-danger\">\n                  {this.state.error.divisorError}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    //set results if divisor and ranger details available\n    if (this.state.divisorInfo !== '' && this.state.rangers !== '') {\n      let resultRows = [];\n\n      for (\n        let i = this.state.rangers.lower;\n        i <= this.state.rangers.upper;\n        i++\n      ) {\n        resultRows.push(\n          <div key={i} className=\"row\">\n            <div className=\"col-md-1\">{i}:</div>\n            <div className=\"col-md-10\">\n              {this.state.divisorInfo.outputDetails.map(item => {\n                if (item.divisor !== 0 && i % item.divisor === 0) {\n                  return item.output;\n                }\n              })}\n            </div>\n          </div>\n        );\n      }\n\n      result = (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h4>Result</h4>\n              </div>\n            </div>\n\n            {resultRows}\n          </div>\n        </div>\n      );\n    } else {\n      result = '';\n    }\n\n    return (\n      <div className=\"row\">\n        D\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">{rangers}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12 my-3\">{divisors}</div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12 my-3\">{result}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Divisible;\n","import React, { Component } from 'react';\nimport Divisible from './components/Divisible';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <h1 style={{ width: 300, display: 'block', margin: 'auto' }}>\n            Divisible Test\n          </h1>\n          <Route exact path=\"/\" component={Divisible} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}